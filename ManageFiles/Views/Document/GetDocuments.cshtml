@model PagedList.IPagedList<Common.DTO.DocumentDTO>
@using PagedList.Mvc
@using Common.Resources

@{
    ViewBag.Title = DocumentResource.DocumentHeader;
}
<h2>@DocumentResource.DocumentHeader</h2>

<div class="row">
    <p>
        @Html.ActionLink(DocumentResource.Upload, "Upload", null, new { @class = "btn btn-primary" })
        @Html.ActionLink(DocumentResource.SearchHeader, "Search", null, new { @class = "btn btn-info" })
    </p>
    <table class="table table-striped table-hover">
        <tr>
            <th>
                @DocumentResource.ID
            </th>
            <th>
                @DocumentResource.DocName
            </th>
            <th>
                @DocumentResource.UploadedBy
            </th>
            <th>
                @DocumentResource.DateUploaded
            </th>
            <th>
                @DocumentResource.DocExternalURI
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateUploaded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentExternalURI)
                </td>
                <td>
                    <div>
                        <a id="show-file" href='@string.Format("http://localhost:8080/files-downloader/show/file/{0}", item.ContentUUID)' class="glyphicon glyphicon-open btn btn-info">@DocumentResource.Show</a>
                        <a id="download-file" href='@string.Format("http://localhost:8080/files-downloader/download/file/{0}", item.ContentUUID)' class="glyphicon glyphicon-save btn btn-warning">@DocumentResource.Download</a>
                    </div>
                </td>
            </tr>
        }
    </table>
    <div class="row">
        @Html.PagedListPager(Model, page => Url.Action("GetDocuments", new { page }))
    </div>
</div>